<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>bundleid</key>
	<string>hellosa.alfredappv2.taobaoip</string>
	<key>connections</key>
	<dict>
		<key>58086910-2BD0-48D5-B696-B1B2CF740D7B</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>AA8991B9-BECF-44CB-BE34-D7A61C0E7DD0</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
			</dict>
		</array>
	</dict>
	<key>createdby</key>
	<string>hellosa</string>
	<key>description</key>
	<string>利用淘宝 ip 地址库(http://ip.taobao.com)来查询 ip 信息</string>
	<key>disabled</key>
	<false/>
	<key>name</key>
	<string>taobao ip</string>
	<key>objects</key>
	<array>
		<dict>
			<key>config</key>
			<dict>
				<key>argumenttype</key>
				<integer>0</integer>
				<key>escaping</key>
				<integer>127</integer>
				<key>keyword</key>
				<string>taobaoip</string>
				<key>runningsubtext</key>
				<string>查询中...</string>
				<key>script</key>
				<string>import urllib2
import json
from xml.etree.ElementTree import Element, SubElement
from xml.etree import ElementTree
from xml.dom import minidom
import hashlib
import sys

def generate_feedback(ip, title, subtitle):
    items = Element('items')
    uid = hashlib.md5(ip).hexdigest()
    arg = title
    item = SubElement(items, 'item', {'uid': uid, 'arg': arg})
    element_item_title = SubElement(item, 'title')
    element_item_title.text = title
    element_item_subtitle = SubElement(item, 'subtitle')
    element_item_subtitle.text = subtitle
    element_item_icon = SubElement(item, 'icon')
    element_item_icon.text = "icon.png"

    rough_string = ElementTree.tostring(items, 'utf-8')
    print rough_string
    #print minidom.parseString(rough_string).toprettyxml(indent="    ")

ip = u'{query}'
#ip = sys.argv[1]
ip_taobao_api_url = "http://ip.taobao.com/service/getIpInfo.php?ip="

f = urllib2.urlopen(ip_taobao_api_url + ip)
#print f.read()

result = json.loads(f.read())
# return code: 0: success, 1: failed
#code result["code"]
area = result["data"]["area"]
city = result["data"]["city"]
country = result["data"]["country"]
isp = result["data"]["isp"]
region = result["data"]["region"]

title = "%s %s %s" % (country, region, city)
subtitle = "%s %s" % (area, isp)

generate_feedback(ip, title, subtitle)
</string>
				<key>subtext</key>
				<string>利用淘宝 ip 地址库查询 ip 信息</string>
				<key>title</key>
				<string>taobaoip</string>
				<key>type</key>
				<integer>3</integer>
				<key>withspace</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.scriptfilter</string>
			<key>uid</key>
			<string>58086910-2BD0-48D5-B696-B1B2CF740D7B</string>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>autopaste</key>
				<true/>
				<key>clipboardtext</key>
				<string>{query}</string>
			</dict>
			<key>type</key>
			<string>alfred.workflow.output.clipboard</string>
			<key>uid</key>
			<string>AA8991B9-BECF-44CB-BE34-D7A61C0E7DD0</string>
		</dict>
	</array>
	<key>readme</key>
	<string></string>
	<key>uidata</key>
	<dict>
		<key>58086910-2BD0-48D5-B696-B1B2CF740D7B</key>
		<dict>
			<key>ypos</key>
			<real>180</real>
		</dict>
		<key>AA8991B9-BECF-44CB-BE34-D7A61C0E7DD0</key>
		<dict>
			<key>ypos</key>
			<real>180</real>
		</dict>
	</dict>
	<key>webaddress</key>
	<string>http://blog.hellosa.org/</string>
</dict>
</plist>
